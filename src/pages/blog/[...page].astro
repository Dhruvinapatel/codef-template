---
import BaseLayout from "@layouts/BaseLayout.astro";
import ArticleCard from "@components/ArticleCard.astro";
import { Frontmatter, sortDateDescending } from "src/misc";
import { MarkdownInstance, Page } from "astro";
import config from "src/config";

export interface Props {
  page: Page<MarkdownInstance<Frontmatter>>;
}

export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob<Frontmatter>('../../pages/blog/articles/*.md');
  const posts = sortDateDescending(allPosts.filter((post) => post.frontmatter.draft != true));
  return paginate(posts, { pageSize: config.pageSize ?? 5 });
}

const { page } = Astro.props as Props;
const baseSite = Astro.site.pathname.slice(0, Astro.site.pathname.length - 1)
---

<BaseLayout title="test" activeLink="blog">
  {page.currentPage == 1 ? <h1
    class="text-center text-3xl font-semibold bg-gradient-orange text-transparent bg-clip-text mb-8">
    Recent Articles</h1> : null}

  <div class="flex flex-wrap flex-col justify-center gap-12">
    {page.data.map(post =>
    <ArticleCard content={post} />)}
  </div>

  <div class="btn-group justify-center mt-12">
    {page.currentPage !== 1 && page.currentPage !== 2? <a href={`${baseSite}/blog/`} class="btn">1</a> : null}

    {page.url.prev ? <a class="btn" href={baseSite + page.url.prev}>{page.currentPage - 1}</a> : null}
    <a href={baseSite + page.url.current} class="btn btn-active btn-disabled">{page.currentPage}</a>
    {page.url.next ? <a class="btn" href={baseSite + page.url.next}>{page.currentPage + 1}</a> : null}

    {page.currentPage !== page.lastPage && page.currentPage + 1 !== page.lastPage? <a
      href={`${baseSite}/blog/${page.lastPage}/`} class="btn">{page.lastPage}</a> : null}
  </div>
</BaseLayout>