---
import BaseLayout from "@layouts/BaseLayout.astro";
import ArticleCard from "@components/ArticleCard.astro";
import { Frontmatter, sortDateDescending, getAllUniqueTags } from "src/misc";
import { MarkdownInstance, Page } from "astro";
import config from "src/config.js";

export interface Props {
  page: Page<MarkdownInstance<Frontmatter>>;
}

export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob<Frontmatter>('../../blog/articles/*.md');
  const allTags = getAllUniqueTags(allPosts);
  // For every tag, return a paginate() result.
  // Make sure that you pass `{params: {tag}}` to `paginate()`
  // so that Astro knows which tag grouping the result is for.
  return allTags.map((tag) => {
    const filteredPosts = sortDateDescending(allPosts.filter((post) => {
      return post.frontmatter.tags.find(ele => ele === tag) && post.frontmatter.draft != true
    }));

    return paginate(filteredPosts, {
      params: { tag },
      pageSize: config.pageSize ?? 5,
    });
  });
}

const { page } = Astro.props;

const { tag } = Astro.params;
const baseSite = Astro.site.pathname.slice(0, Astro.site.pathname.length - 1)

---

<BaseLayout title="test">
  <h1 class="text-center text-3xl font-semibold text-secondary mb-8">
    #{tag.toString()}</h1>

  <div class="flex flex-wrap flex-col justify-center gap-12">
    {page.data.map((post, index) =>
    <ArticleCard content={post} lazyLoading={index > 2} />)}
  </div>

  <div class="btn-group justify-center mt-12">
    {page.currentPage !== 1 && page.currentPage !== 2? <a href={`${baseSite}/${tag}/`} class="btn">1</a> : null}

    {page.url.prev ? <a class="btn" href={baseSite + page.url.prev}>{page.currentPage - 1}</a> : null}
    <a href={baseSite + page.url.current} class="btn btn-active btn-disabled">{page.currentPage}</a>
    {page.url.next ? <a class="btn" href={baseSite + page.url.next}>{page.currentPage + 1}</a> : null}

    {page.currentPage !== page.lastPage && page.currentPage + 1 !== page.lastPage? <a
      href={`${baseSite}/tags/${tag}/${page.lastPage}/`} class="btn">{page.lastPage}</a> : null}
  </div>
</BaseLayout>