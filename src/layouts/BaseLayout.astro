---
import BaseHead from "./BaseHead.astro";
import NavListItem from "@components/NavListItem.astro";
import pageSize from "src/config.js";
export interface Props {
  title: string,
  description?: string,
  activeLink?: string,
}


const { title, description = "My blog", activeLink = null } = Astro.props as Props;

const { navLinks } = pageSize;

const today = new Date(); //! Redundant 
---

<html lang="en">

  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <header class="container mx-auto flex items-center justify-between mb-16">
      <div class="p-4 orange">
        <svg width="70" height="30" viewBox="0 0 140 60" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M3.712 46.24C2.496 46.24 1.632 45.6 1.12 44.32C0.64 43.04 0.4 40.992 0.4 38.176C0.4 34.016 0.992 30.064 2.176 26.32C2.464 25.392 2.928 24.72 3.568 24.304C4.24 23.856 5.168 23.632 6.352 23.632C6.992 23.632 7.44 23.712 7.696 23.872C7.952 24.032 8.08 24.336 8.08 24.784C8.08 25.296 7.84 26.448 7.36 28.24C7.04 29.52 6.784 30.64 6.592 31.6C6.4 32.528 6.24 33.696 6.112 35.104C6.976 32.608 8 30.496 9.184 28.768C10.4 27.04 11.632 25.76 12.88 24.928C14.16 24.064 15.36 23.632 16.48 23.632C17.6 23.632 18.384 23.888 18.832 24.4C19.312 24.912 19.552 25.696 19.552 26.752C19.552 27.776 19.248 29.632 18.64 32.32C18.384 33.472 18.208 34.336 18.112 34.912C19.712 30.976 21.488 28.112 23.44 26.32C25.392 24.528 27.216 23.632 28.912 23.632C30.992 23.632 32.032 24.672 32.032 26.752C32.032 28 31.68 30.256 30.976 33.52C30.368 36.304 30.064 38.144 30.064 39.04C30.064 40.32 30.528 40.96 31.456 40.96C32.096 40.96 32.848 40.576 33.712 39.808C34.608 39.008 35.792 37.728 37.264 35.968C37.648 35.52 38.08 35.296 38.56 35.296C38.976 35.296 39.296 35.488 39.52 35.872C39.776 36.256 39.904 36.784 39.904 37.456C39.904 38.736 39.6 39.728 38.992 40.432C37.616 42.128 36.128 43.52 34.528 44.608C32.96 45.696 31.168 46.24 29.152 46.24C27.52 46.24 26.288 45.776 25.456 44.848C24.624 43.888 24.208 42.512 24.208 40.72C24.208 39.824 24.432 38.224 24.88 35.92C25.296 33.904 25.504 32.512 25.504 31.744C25.504 31.232 25.328 30.976 24.976 30.976C24.56 30.976 23.968 31.52 23.2 32.608C22.432 33.664 21.664 35.072 20.896 36.832C20.128 38.592 19.504 40.448 19.024 42.4C18.672 43.936 18.256 44.96 17.776 45.472C17.328 45.984 16.592 46.24 15.568 46.24C14.512 46.24 13.712 45.744 13.168 44.752C12.656 43.728 12.4 42.496 12.4 41.056C12.4 39.84 12.56 38.08 12.88 35.776C13.136 33.728 13.264 32.384 13.264 31.744C13.264 31.232 13.088 30.976 12.736 30.976C12.256 30.976 11.648 31.552 10.912 32.704C10.176 33.856 9.456 35.328 8.752 37.12C8.08 38.912 7.536 40.672 7.12 42.4C6.768 43.904 6.352 44.928 5.872 45.472C5.424 45.984 4.704 46.24 3.712 46.24ZM57.4308 35.296C57.8468 35.296 58.1668 35.488 58.3907 35.872C58.6468 36.256 58.7748 36.784 58.7748 37.456C58.7748 38.736 58.4708 39.728 57.8628 40.432C56.6788 41.872 54.9988 43.2 52.8228 44.416C50.6788 45.632 48.3748 46.24 45.9108 46.24C42.5508 46.24 39.9428 45.328 38.0868 43.504C36.2308 41.68 35.3027 39.184 35.3027 36.016C35.3027 33.808 35.7668 31.76 36.6948 29.872C37.6228 27.952 38.9028 26.432 40.5348 25.312C42.1988 24.192 44.0708 23.632 46.1508 23.632C48.0068 23.632 49.4948 24.192 50.6148 25.312C51.7348 26.4 52.2948 27.888 52.2948 29.776C52.2948 31.984 51.4948 33.888 49.8948 35.488C48.3268 37.056 45.6548 38.304 41.8788 39.232C42.6788 40.704 44.1988 41.44 46.4388 41.44C47.8788 41.44 49.5108 40.944 51.3348 39.952C53.1908 38.928 54.7908 37.6 56.1348 35.968C56.5188 35.52 56.9508 35.296 57.4308 35.296ZM45.3348 28.336C44.1508 28.336 43.1428 29.024 42.3108 30.4C41.5108 31.776 41.1108 33.44 41.1108 35.392V35.488C42.9988 35.04 44.4868 34.368 45.5748 33.472C46.6628 32.576 47.2068 31.536 47.2068 30.352C47.2068 29.744 47.0308 29.264 46.6788 28.912C46.3588 28.528 45.9108 28.336 45.3348 28.336ZM73.0585 35.296C73.4745 35.296 73.7945 35.488 74.0185 35.872C74.2745 36.256 74.4025 36.784 74.4025 37.456C74.4025 38.736 74.0985 39.728 73.4905 40.432C72.1145 42.128 70.6105 43.52 68.9785 44.608C67.3785 45.696 65.5545 46.24 63.5065 46.24C60.6905 46.24 58.5945 44.96 57.2185 42.4C55.8745 39.84 55.2025 36.528 55.2025 32.464C55.2025 28.56 55.6985 24.112 56.6905 19.12C57.7145 14.128 59.2025 9.84 61.1545 6.256C63.1385 2.672 65.4905 0.879997 68.2105 0.879997C69.7465 0.879997 70.9465 1.6 71.8105 3.04C72.7065 4.448 73.1545 6.48 73.1545 9.136C73.1545 12.944 72.0985 17.36 69.9865 22.384C67.8745 27.408 65.0105 32.384 61.3945 37.312C61.6185 38.624 61.9865 39.568 62.4985 40.144C63.0105 40.688 63.6825 40.96 64.5145 40.96C65.8265 40.96 66.9785 40.592 67.9705 39.856C68.9625 39.088 70.2265 37.792 71.7625 35.968C72.1465 35.52 72.5785 35.296 73.0585 35.296ZM67.1545 5.632C66.4185 5.632 65.5865 6.96 64.6585 9.616C63.7305 12.272 62.9145 15.568 62.2105 19.504C61.5065 23.44 61.1225 27.216 61.0585 30.832C63.3305 27.088 65.1385 23.344 66.4825 19.6C67.8265 15.824 68.4985 12.384 68.4985 9.28C68.4985 6.848 68.0505 5.632 67.1545 5.632ZM94.2828 31.408C94.3788 31.376 94.5388 31.36 94.7628 31.36C95.2428 31.36 95.6108 31.52 95.8668 31.84C96.1228 32.16 96.2508 32.592 96.2508 33.136C96.2508 34.128 96.0588 34.912 95.6748 35.488C95.2908 36.032 94.7148 36.432 93.9468 36.688C92.4748 37.168 90.9068 37.408 89.2428 37.408C87.8348 37.408 86.5068 37.216 85.2588 36.832C84.3308 38.336 83.3068 39.888 82.1868 41.488C80.9068 43.312 79.8028 44.56 78.8748 45.232C77.9468 45.904 76.8908 46.24 75.7068 46.24C74.3948 46.24 73.3548 45.728 72.5868 44.704C71.8508 43.68 71.3868 42.064 71.1948 39.856C70.8108 35.376 70.6188 31.456 70.6188 28.096V26.416C70.6508 25.36 70.9388 24.624 71.4828 24.208C72.0268 23.792 72.8428 23.584 73.9308 23.584C74.7628 23.584 75.3708 23.776 75.7548 24.16C76.1708 24.512 76.3788 25.12 76.3788 25.984C76.3788 29.664 76.6028 34.448 77.0508 40.336C78.9708 37.488 80.4108 35.216 81.3708 33.52C80.8908 32.592 80.6508 31.488 80.6508 30.208C80.6508 29.12 80.8908 28.064 81.3708 27.04C81.8508 26.016 82.5068 25.184 83.3388 24.544C84.1708 23.904 85.1148 23.584 86.1708 23.584C87.0988 23.584 87.8508 23.92 88.4268 24.592C89.0028 25.232 89.2908 26.176 89.2908 27.424C89.2908 28.864 88.9068 30.512 88.1388 32.368C89.3548 32.304 90.9708 32.064 92.9868 31.648L94.2828 31.408ZM98.3733 20.464C97.0293 20.464 96.0213 20.16 95.3493 19.552C94.6773 18.912 94.3413 18.032 94.3413 16.912C94.3413 15.792 94.7733 14.864 95.6373 14.128C96.5333 13.36 97.6373 12.976 98.9493 12.976C100.133 12.976 101.093 13.264 101.829 13.84C102.565 14.416 102.933 15.232 102.933 16.288C102.933 17.568 102.517 18.592 101.685 19.36C100.853 20.096 99.7493 20.464 98.3733 20.464ZM97.9893 46.24C95.9093 46.24 94.3893 45.504 93.4293 44.032C92.5013 42.56 92.0373 40.608 92.0373 38.176C92.0373 36.736 92.2133 34.896 92.5653 32.656C92.9493 30.384 93.4293 28.272 94.0053 26.32C94.2933 25.296 94.6773 24.592 95.1573 24.208C95.6373 23.824 96.4053 23.632 97.4613 23.632C99.0933 23.632 99.9093 24.176 99.9093 25.264C99.9093 26.064 99.6053 27.92 98.9973 30.832C98.2293 34.352 97.8453 36.736 97.8453 37.984C97.8453 38.944 97.9733 39.68 98.2293 40.192C98.4853 40.704 98.9173 40.96 99.5253 40.96C100.101 40.96 100.821 40.56 101.685 39.76C102.549 38.96 103.701 37.696 105.141 35.968C105.525 35.52 105.957 35.296 106.437 35.296C106.853 35.296 107.173 35.488 107.397 35.872C107.653 36.256 107.781 36.784 107.781 37.456C107.781 38.736 107.477 39.728 106.869 40.432C103.701 44.304 100.741 46.24 97.9893 46.24ZM107.306 46.24C106.09 46.24 105.226 45.6 104.714 44.32C104.234 43.04 103.994 40.992 103.994 38.176C103.994 34.016 104.586 30.064 105.77 26.32C106.058 25.392 106.522 24.72 107.162 24.304C107.834 23.856 108.762 23.632 109.946 23.632C110.586 23.632 111.034 23.712 111.29 23.872C111.546 24.032 111.674 24.336 111.674 24.784C111.674 25.296 111.434 26.448 110.954 28.24C110.634 29.52 110.378 30.64 110.186 31.6C109.994 32.56 109.834 33.744 109.706 35.152C110.762 32.4 111.946 30.16 113.258 28.432C114.57 26.704 115.85 25.472 117.098 24.736C118.378 24 119.546 23.632 120.602 23.632C121.626 23.632 122.394 23.904 122.906 24.448C123.45 24.96 123.722 25.728 123.722 26.752C123.722 27.584 123.546 29.152 123.194 31.456C122.874 33.408 122.618 35.264 122.426 37.024C122.234 38.752 122.138 40.688 122.138 42.832C122.138 44.048 121.882 44.928 121.37 45.472C120.89 45.984 120.09 46.24 118.97 46.24C117.914 46.24 117.146 45.968 116.666 45.424C116.186 44.88 115.946 44.064 115.946 42.976C115.946 41.696 116.17 39.584 116.618 36.64C117.002 34.08 117.194 32.448 117.194 31.744C117.194 31.232 117.018 30.976 116.666 30.976C116.25 30.976 115.658 31.52 114.89 32.608C114.154 33.664 113.386 35.072 112.586 36.832C111.818 38.592 111.194 40.448 110.714 42.4C110.362 43.904 109.946 44.928 109.466 45.472C109.018 45.984 108.298 46.24 107.306 46.24Z"
            fill="#FF0000" id="svgName" stroke-width="4" stroke-linecap="round"></path>
        </svg>
      </div>

      <label aria-label="Hamburger Menu" id="nav-toggle"
        class="btn btn-circle swap swap-rotate fixed z-[999] top-4 right-4 hidden" aria-controls="primary-nav"
        aria-expanded="false">
        <input type="checkbox" />
        <!-- hamburger icon -->
        <svg class="swap-off fill-current" xmlns="http://www.w3.org/2000/svg" width="32" height="32"
          viewBox="0 0 512 512">
          <path d="M64,384H448V341.33H64Zm0-106.67H448V234.67H64ZM64,128v42.67H448V128Z" />
        </svg>
        <!-- close icon -->
        <svg class="swap-on fill-current" xmlns="http://www.w3.org/2000/svg" width="32" height="32"
          viewBox="0 0 512 512">
          <polygon
            points="400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49" />
        </svg>
      </label>

      <nav class="mr-6">
        <ul id="primary-nav" class="flex grow gap-8 items-center justify-center z-[100]" data-visible="false">
          {navLinks.map(ele =>
          <NavListItem navLink={ele.link} activeLink={activeLink} icon={ele.icon} />)}
          <li>
            <!-- Theme, Light/Dark mode -->
            <label id="themeSetting" class="swap swap-rotate">
              <!-- this hidden checkbox controls the state -->
              <input type="checkbox" />
              <!-- sun icon -->
              <svg data-set-theme="cmyk" data-act-class="ACTIVECLASS" class="swap-on fill-current w-6 h-6"
                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path
                  d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z" />
              </svg>
              <!-- moon icon -->
              <svg data-set-theme="night" data-act-class="ACTIVECLASS" class="swap-off fill-current w-6 h-6"
                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path
                  d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z" />
              </svg>
            </label>
          </li>
        </ul>
      </nav>
    </header>

    <main class="container mx-auto">
      <slot />
    </main>

    <svg xmlns="http://www.w3.org/2000/svg" id="scrollButton" viewBox="0 0 512 512"
      class="w-9 h-9 fill-current fixed bottom-5 right-5 text-primary animate-[jump_1500ms_infinite] cursor-pointer"
      style="display: none">
      <path
        d="M256 0C114.6 0 0 114.6 0 256c0 141.4 114.6 256 256 256s256-114.6 256-256C512 114.6 397.4 0 256 0zM382.6 254.6c-12.5 12.5-32.75 12.5-45.25 0L288 205.3V384c0 17.69-14.33 32-32 32s-32-14.31-32-32V205.3L174.6 254.6c-12.5 12.5-32.75 12.5-45.25 0s-12.5-32.75 0-45.25l103.1-103.1C241.3 97.4 251.1 96 256 96c4.881 0 14.65 1.391 22.65 9.398l103.1 103.1C395.1 221.9 395.1 242.1 382.6 254.6z" />
    </svg>

    <footer class="border-t px-4 py-6 mt-6">
      <p class="text-center text-sm">&copy; {today.getFullYear()} Melvin</p>
      <p class="text-center text-xs">Built with <a class="text-cyan-600 hover:text-black" href="https://astro.build"
          target="_blank" rel="noreferrer noopener">Astro</a></p>
    </footer>
  </body>

</html>

<style>
  html[data-theme=night] {
    --fill-color: 142 72% 29%;
    --stroke-color: 217 33% 17%;
    --hambuger-bg: 0 0% 30%;
  }

  html[data-theme=cmyk] {
    --fill-color: 173 80% 40%;
    --stroke-color: 213 27% 84%;
    --hambuger-bg: 0 0% 70%;
    /*     color: hsl(142 72% 29% / 0.1); */
  }


  /* Mobile Navigation */
  @media (max-width:640px) {
    ul {
      position: fixed;
      inset: 0 0 0 30%;
      flex-direction: column;
      padding: min(30vh, 10rem) 2em;
      transform: translateX(100%);
      transition: transform 500ms ease-in-out;
      background: hsl(var(--hambuger-bg) / 0.5);
      backdrop-filter: blur(2rem);
    }

    ul[data-visible=true] {
      transform: translateX(0);
    }

    label {
      display: grid;
    }
  }

  /* Logo Animation */
  #svgName {
    stroke-dasharray: 844;
    stroke-dashoffset: 844;
    animation: svgNameAnimation 5s forwards 500ms ease-in-out;
    fill: hsl(var(--fill-color) / 0.1);
    stroke: hsl(var(--stroke-color));
    paint-order: stroke;
  }

  @keyframes svgNameAnimation {
    to {
      stroke-dashoffset: 0;
      fill: hsl(var(--fill-color));
    }
  }
</style>

<script>
  // Navigation / Hamburger menu - control
  const nav = document.querySelector<HTMLUListElement>('#primary-nav')
  const navToggle = document.querySelector<HTMLLabelElement>('#nav-toggle')
  const navToggleInput = document.querySelector<HTMLInputElement>('#nav-toggle input')

  navToggle.addEventListener('change', () => {
    if (nav.getAttribute('data-visible') === 'false') {
      nav.setAttribute('data-visible', "true");
      nav.setAttribute("aria-expanded", "true");
    } else if (nav.getAttribute('data-visible') === 'true') {
      nav.setAttribute('data-visible', "false");
      nav.setAttribute("aria-expanded", "false");
    }
  });

  document.querySelector('main').addEventListener('click', () => {
    if (nav.getAttribute('data-visible') === 'true') {
      nav.setAttribute('data-visible', "false");
      nav.setAttribute("aria-expanded", "false");
      navToggleInput.checked = !navToggleInput.checked;
    }
  });


  // Scroll To Top button - control
  const scrollButton = document.querySelector<SVGElement>('#scrollButton')
  scrollButton.addEventListener('click', () => {
    window.scroll({
      top: 0,
      left: 0,
      behavior: 'smooth'
    });
  });
  window.addEventListener('scroll', () => {
    if (document.documentElement.scrollTop > (window.innerHeight / 4)) {
      scrollButton.style.display = "block";
    } else {
      scrollButton.style.display = "none";
    }
  });


  // Theme stuff
  import { themeChange } from "theme-change";
  themeChange();
  if (localStorage['theme'] === "cmyk" || document.querySelector('html').getAttribute('data-theme') === 'cmyk') {
    document.querySelector<HTMLInputElement>('#themeSetting > input').checked = true;
  }
</script>